[
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "pathlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pathlib",
        "description": "pathlib",
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "urls",
        "importPath": "mainApi",
        "description": "mainApi",
        "isExtraImport": true,
        "detail": "mainApi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "firebase_admin",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "firebase_admin",
        "description": "firebase_admin",
        "detail": "firebase_admin",
        "documentation": {}
    },
    {
        "label": "Certificate",
        "importPath": "firebase_admin.credentials",
        "description": "firebase_admin.credentials",
        "isExtraImport": true,
        "detail": "firebase_admin.credentials",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "requests",
        "description": "requests",
        "isExtraImport": true,
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "cache_page",
        "importPath": "django.views.decorators.cache",
        "description": "django.views.decorators.cache",
        "isExtraImport": true,
        "detail": "django.views.decorators.cache",
        "documentation": {}
    },
    {
        "label": "csrf_protect",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "firestore_adminCallTransformer",
        "kind": 6,
        "importPath": ".env.bin.fixup_firestore_admin_v1_keywords",
        "description": ".env.bin.fixup_firestore_admin_v1_keywords",
        "peekOfCode": "class firestore_adminCallTransformer(cst.CSTTransformer):\n    CTRL_PARAMS: Tuple[str] = ('retry', 'timeout', 'metadata')\n    METHOD_TO_PARAMS: Dict[str, Tuple[str]] = {\n        'create_index': ('parent', 'index', ),\n        'delete_index': ('name', ),\n        'export_documents': ('name', 'collection_ids', 'output_uri_prefix', ),\n        'get_database': ('name', ),\n        'get_field': ('name', ),\n        'get_index': ('name', ),\n        'import_documents': ('name', 'collection_ids', 'input_uri_prefix', ),",
        "detail": ".env.bin.fixup_firestore_admin_v1_keywords",
        "documentation": {}
    },
    {
        "label": "partition",
        "kind": 2,
        "importPath": ".env.bin.fixup_firestore_admin_v1_keywords",
        "description": ".env.bin.fixup_firestore_admin_v1_keywords",
        "peekOfCode": "def partition(\n    predicate: Callable[[Any], bool],\n    iterator: Sequence[Any]\n) -> Tuple[List[Any], List[Any]]:\n    \"\"\"A stable, out-of-place partition.\"\"\"\n    results = ([], [])\n    for i in iterator:\n        results[int(predicate(i))].append(i)\n    # Returns trueList, falseList\n    return results[1], results[0]",
        "detail": ".env.bin.fixup_firestore_admin_v1_keywords",
        "documentation": {}
    },
    {
        "label": "fix_files",
        "kind": 2,
        "importPath": ".env.bin.fixup_firestore_admin_v1_keywords",
        "description": ".env.bin.fixup_firestore_admin_v1_keywords",
        "peekOfCode": "def fix_files(\n    in_dir: pathlib.Path,\n    out_dir: pathlib.Path,\n    *,\n    transformer=firestore_adminCallTransformer(),\n):\n    \"\"\"Duplicate the input dir to the output dir, fixing file method calls.\n    Preconditions:\n    * in_dir is a real directory\n    * out_dir is a real, empty directory",
        "detail": ".env.bin.fixup_firestore_admin_v1_keywords",
        "documentation": {}
    },
    {
        "label": "firestoreCallTransformer",
        "kind": 6,
        "importPath": ".env.bin.fixup_firestore_v1_keywords",
        "description": ".env.bin.fixup_firestore_v1_keywords",
        "peekOfCode": "class firestoreCallTransformer(cst.CSTTransformer):\n    CTRL_PARAMS: Tuple[str] = ('retry', 'timeout', 'metadata')\n    METHOD_TO_PARAMS: Dict[str, Tuple[str]] = {\n        'batch_get_documents': ('database', 'documents', 'mask', 'transaction', 'new_transaction', 'read_time', ),\n        'batch_write': ('database', 'writes', 'labels', ),\n        'begin_transaction': ('database', 'options', ),\n        'commit': ('database', 'writes', 'transaction', ),\n        'create_document': ('parent', 'collection_id', 'document', 'document_id', 'mask', ),\n        'delete_document': ('name', 'current_document', ),\n        'get_document': ('name', 'mask', 'transaction', 'read_time', ),",
        "detail": ".env.bin.fixup_firestore_v1_keywords",
        "documentation": {}
    },
    {
        "label": "partition",
        "kind": 2,
        "importPath": ".env.bin.fixup_firestore_v1_keywords",
        "description": ".env.bin.fixup_firestore_v1_keywords",
        "peekOfCode": "def partition(\n    predicate: Callable[[Any], bool],\n    iterator: Sequence[Any]\n) -> Tuple[List[Any], List[Any]]:\n    \"\"\"A stable, out-of-place partition.\"\"\"\n    results = ([], [])\n    for i in iterator:\n        results[int(predicate(i))].append(i)\n    # Returns trueList, falseList\n    return results[1], results[0]",
        "detail": ".env.bin.fixup_firestore_v1_keywords",
        "documentation": {}
    },
    {
        "label": "fix_files",
        "kind": 2,
        "importPath": ".env.bin.fixup_firestore_v1_keywords",
        "description": ".env.bin.fixup_firestore_v1_keywords",
        "peekOfCode": "def fix_files(\n    in_dir: pathlib.Path,\n    out_dir: pathlib.Path,\n    *,\n    transformer=firestoreCallTransformer(),\n):\n    \"\"\"Duplicate the input dir to the output dir, fixing file method calls.\n    Preconditions:\n    * in_dir is a real directory\n    * out_dir is a real, empty directory",
        "detail": ".env.bin.fixup_firestore_v1_keywords",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "api.api.asgi",
        "description": "api.api.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "api.api.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nsys.path.append(os.path.join(BASE_DIR, \"firebase\"))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-7@e4oknj-n#a-lwtk)&t^4$njv7g0k#$=l%p@81e3j6o@l0u_h'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-7@e4oknj-n#a-lwtk)&t^4$njv7g0k#$=l%p@81e3j6o@l0u_h'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django.contrib.sites\",",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django.contrib.sites\",\n    \"social_django\",\n    \"allauth\",",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    # 'allauth.account.middleware.AuthenticationMiddleware',",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "ROOT_URLCONF = \"api.urls\"\n# TEMPLATE_PATH = os.path.join(BASE_DIR, 'templates')\n# TEMPLATE_DIRS = (\n#       TEMPLATE_PATH,\n#  )\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "WSGI_APPLICATION = \"api.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\nAUTHENTICATION_BACKENDS = [",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\nAUTHENTICATION_BACKENDS = [\n    'social_core.backends.open_id.OpenIdAuth',\n    'social_core.backends.google.GoogleOpenId',\n    'social_core.backends.google.GoogleOAuth2',",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    'social_core.backends.open_id.OpenIdAuth',\n    'social_core.backends.google.GoogleOpenId',\n    'social_core.backends.google.GoogleOAuth2',\n    'social_core.backends.google.GoogleOAuth',\n    \"django.contrib.auth.backends.ModelBackend\",\n]\nSITE_ID = 1\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'\nSOCIALACCOUNT_PROVIDERS = {",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "SITE_ID = 1\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'\nSOCIALACCOUNT_PROVIDERS = {\n    \"google\": {\n        # For each OAuth based provider, either add a ``SocialApp``\n        # (``socialaccount`` app) containing the required client\n        # credentials, or list them here:\n        \"APP\": {\n            \"client_id\": os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\"),\n            \"secret\": os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\"),",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_ENGINE",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "SESSION_ENGINE = 'django.contrib.sessions.backends.db'\nSOCIALACCOUNT_PROVIDERS = {\n    \"google\": {\n        # For each OAuth based provider, either add a ``SocialApp``\n        # (``socialaccount`` app) containing the required client\n        # credentials, or list them here:\n        \"APP\": {\n            \"client_id\": os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\"),\n            \"secret\": os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\"),\n            \"key\": \"\",",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "SOCIALACCOUNT_PROVIDERS",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "SOCIALACCOUNT_PROVIDERS = {\n    \"google\": {\n        # For each OAuth based provider, either add a ``SocialApp``\n        # (``socialaccount`` app) containing the required client\n        # credentials, or list them here:\n        \"APP\": {\n            \"client_id\": os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\"),\n            \"secret\": os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\"),\n            \"key\": \"\",\n        },",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "LANGUAGE_CODE = \"pt-br\"\nAPPEND_SLASH = False\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "APPEND_SLASH",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "APPEND_SLASH = False\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\"FIREBASE CREDENTIALS\"\"\"",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\"FIREBASE CREDENTIALS\"\"\"\nFIREBASE_ACCOUNT_TYPE = os.environ.get(\"FIREBASE_ACCOUNT_TYPE\")\nFIREBASE_PROJECT_ID = os.environ.get(\"FIREBASE_PROJECT_ID\")\nFIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\"FIREBASE CREDENTIALS\"\"\"\nFIREBASE_ACCOUNT_TYPE = os.environ.get(\"FIREBASE_ACCOUNT_TYPE\")\nFIREBASE_PROJECT_ID = os.environ.get(\"FIREBASE_PROJECT_ID\")\nFIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")\nFIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\"FIREBASE CREDENTIALS\"\"\"\nFIREBASE_ACCOUNT_TYPE = os.environ.get(\"FIREBASE_ACCOUNT_TYPE\")\nFIREBASE_PROJECT_ID = os.environ.get(\"FIREBASE_PROJECT_ID\")\nFIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")\nFIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")\nFIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\"FIREBASE CREDENTIALS\"\"\"\nFIREBASE_ACCOUNT_TYPE = os.environ.get(\"FIREBASE_ACCOUNT_TYPE\")\nFIREBASE_PROJECT_ID = os.environ.get(\"FIREBASE_PROJECT_ID\")\nFIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")\nFIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")\nFIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")\nFIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_ACCOUNT_TYPE",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_ACCOUNT_TYPE = os.environ.get(\"FIREBASE_ACCOUNT_TYPE\")\nFIREBASE_PROJECT_ID = os.environ.get(\"FIREBASE_PROJECT_ID\")\nFIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")\nFIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")\nFIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")\nFIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_PROJECT_ID",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_PROJECT_ID = os.environ.get(\"FIREBASE_PROJECT_ID\")\nFIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")\nFIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")\nFIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")\nFIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_PRIVATE_KEY_ID",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_PRIVATE_KEY_ID = os.environ.get(\"FIREBASE_PRIVATE_KEY_ID\")\nFIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")\nFIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")\nFIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_PRIVATE_KEY",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_PRIVATE_KEY = os.environ.get(\"FIREBASE_PRIVATE_KEY\")\nFIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")\nFIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_CLIENT_EMAIL",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_CLIENT_EMAIL = os.environ.get(\"FIREBASE_CLIENT_EMAIL\")\nFIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")\n# GOOGLE_OAUTH2_CLIENT_ID = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_CLIENT_ID",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_CLIENT_ID = os.environ.get(\"FIREBASE_CLIENT_ID\")\nFIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")\n# GOOGLE_OAUTH2_CLIENT_ID = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\")\n# GOOGLE_OAUTH2_CLIENT_SECRET = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\")",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_AUTH_URI",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_AUTH_URI = os.environ.get(\"FIREBASE_AUTH_URI\")\nFIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")\n# GOOGLE_OAUTH2_CLIENT_ID = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\")\n# GOOGLE_OAUTH2_CLIENT_SECRET = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\")\n# GOOGLE_AUTH_REDIRECT_URI = \"http://localhost:8000/google-auth/\"",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_TOKEN_URI",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_TOKEN_URI = os.environ.get(\"FIREBASE_TOKEN_URI\")\nFIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")\n# GOOGLE_OAUTH2_CLIENT_ID = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\")\n# GOOGLE_OAUTH2_CLIENT_SECRET = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\")\n# GOOGLE_AUTH_REDIRECT_URI = \"http://localhost:8000/google-auth/\"\n\"\"\"LOG\"\"\"",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_AUTH_PROVIDER_X509_CERT_URL",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_AUTH_PROVIDER_X509_CERT_URL = os.environ.get(\n    \"FIREBASE_AUTH_PROVIDER_X509_CERT_URL\"\n)\nFIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")\n# GOOGLE_OAUTH2_CLIENT_ID = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\")\n# GOOGLE_OAUTH2_CLIENT_SECRET = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\")\n# GOOGLE_AUTH_REDIRECT_URI = \"http://localhost:8000/google-auth/\"\n\"\"\"LOG\"\"\"\n# LOGGING = {",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "FIREBASE_CLIENT_X509_CERT_URL",
        "kind": 5,
        "importPath": "api.api.settings",
        "description": "api.api.settings",
        "peekOfCode": "FIREBASE_CLIENT_X509_CERT_URL = os.environ.get(\"FIREBASE_CLIENT_X509_CERT_URL\")\n# GOOGLE_API_KEY = os.environ.get(\"GOOGLE_API_KEY\")\n# GOOGLE_OAUTH2_CLIENT_ID = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_ID\")\n# GOOGLE_OAUTH2_CLIENT_SECRET = os.environ.get(\"GOOGLE_OAUTH2_CLIENT_SECRET\")\n# GOOGLE_AUTH_REDIRECT_URI = \"http://localhost:8000/google-auth/\"\n\"\"\"LOG\"\"\"\n# LOGGING = {\n#     'version': 1,\n#     'disable_existing_loggers': False,\n#     'handlers': {",
        "detail": "api.api.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.api.urls",
        "description": "api.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(main_urls)),\n]",
        "detail": "api.api.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "api.api.wsgi",
        "description": "api.api.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "api.api.wsgi",
        "documentation": {}
    },
    {
        "label": "cred",
        "kind": 5,
        "importPath": "api.firebase.firebase_init",
        "description": "api.firebase.firebase_init",
        "peekOfCode": "cred = Certificate(credentials)\ndefault_app = firebase_admin.initialize_app(cred, {\n\t'databaseURL':credentials['databaseURL']\n\t})",
        "detail": "api.firebase.firebase_init",
        "documentation": {}
    },
    {
        "label": "default_app",
        "kind": 5,
        "importPath": "api.firebase.firebase_init",
        "description": "api.firebase.firebase_init",
        "peekOfCode": "default_app = firebase_admin.initialize_app(cred, {\n\t'databaseURL':credentials['databaseURL']\n\t})",
        "detail": "api.firebase.firebase_init",
        "documentation": {}
    },
    {
        "label": "ModelTestCase",
        "kind": 6,
        "importPath": "api.mainApi.tests.test_models",
        "description": "api.mainApi.tests.test_models",
        "peekOfCode": "class ModelTestCase(TestCase):\n    def setUp(self):\n        # Criando objetos para testes\n        self.categoria = Categoria.objects.create(nome='Comidas')\n        self.subcategoria = Subcategoria.objects.create(categoria=self.categoria, nome='Hamburgueres')\n        self.ingrediente = Ingrediente.objects.create(nome='Tomate', quantidade=10, valor_unitario=0.5, data_reposicao='2023-08-15', data_validade='2023-09-15')\n        self.item = ItemCardapio.objects.create(subcategoria=self.subcategoria, nome='X-Burger', descricao='Delicioso hamburguer', valor=10.99)\n        self.carrinho = Carrinho.objects.create(cliente_id='cliente1')\n        self.pedido = Pedido.objects.create(cliente=self.carrinho, status='esperando')\n        self.estoque = Estoque.objects.create(nome='Tomate', quantidade=20, valor_unitario=0.5, data_reposicao='2023-08-01', data_validade='2023-09-01')",
        "detail": "api.mainApi.tests.test_models",
        "documentation": {}
    },
    {
        "label": "PedidoModelTestCase",
        "kind": 6,
        "importPath": "api.mainApi.tests.test_models",
        "description": "api.mainApi.tests.test_models",
        "peekOfCode": "class PedidoModelTestCase(TestCase):\n    def setUp(self):\n        # Criando um carrinho e um pedido para testes\n        self.carrinho = Carrinho.objects.create(cliente='cliente1')\n        self.pedido = Pedido.objects.create(carrinho=self.carrinho, status='esperando')\n    def test_alteracao_estado_pedido(self):\n        self.assertEqual(self.pedido.status, 'esperando')\n        # Alterando o estado do pedido\n        novo_estado = 'preparando'\n        self.pedido.alterar_estado(novo_estado)",
        "detail": "api.mainApi.tests.test_models",
        "documentation": {}
    },
    {
        "label": "MainapiConfig",
        "kind": 6,
        "importPath": "api.mainApi.apps",
        "description": "api.mainApi.apps",
        "peekOfCode": "class MainapiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'mainApi'",
        "detail": "api.mainApi.apps",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "kind": 6,
        "importPath": "api.mainApi.forms",
        "description": "api.mainApi.forms",
        "peekOfCode": "class LoginForm(forms.Form):\n    email = forms.EmailField(\n        widget=forms.TextInput(attrs={\n            'class': 'input100',\n            'placeholder': 'Email',\n            'data-validate': 'Email é necessario: ex@abc.xyz'\n        })\n    )\n    password = forms.CharField(\n        widget=forms.PasswordInput(attrs={",
        "detail": "api.mainApi.forms",
        "documentation": {}
    },
    {
        "label": "CadastroClienteForm",
        "kind": 6,
        "importPath": "api.mainApi.forms",
        "description": "api.mainApi.forms",
        "peekOfCode": "class CadastroClienteForm(forms.Form):\n    nome = forms.CharField(\n        label='nome',\n        widget=forms.TextInput(attrs={\n            'class': 'input100',\n            'placeholder': 'Nome',\n            'data-validate': 'Nome é necessaria'\n        })\n    )\n    email = forms.EmailField(",
        "detail": "api.mainApi.forms",
        "documentation": {}
    },
    {
        "label": "GerenciadorUsuario",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class GerenciadorUsuario(BaseUserManager):\n    def criar_usuario(self, username, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError(_('O campo de email deve ser preenchido'))\n        email = self.normalize_email(email)\n        user = self.model(username=username, email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def criar_superusuario(self, username, email, password=None, **extra_fields):",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "UsuarioCustomizado",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class UsuarioCustomizado(AbstractUser, PermissionsMixin):\n    CLIENTE = 'cliente'\n    COZINHA = 'cozinha'\n    GERENTE = 'gerente'\n    ADM = 'adm'\n    TIPO_USUARIO_CHOICES = [\n        (CLIENTE, 'Cliente'),\n        (COZINHA, 'Cozinha'),\n        (GERENTE, 'Gerente'),\n        (ADM, 'Administrador'),",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Categoria",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Categoria(models.Model):\n    nome = models.CharField(max_length=50)\n    def __str__(self):\n        return self.nome\nclass Subcategoria(models.Model):\n    categoria = models.ForeignKey(Categoria, on_delete=models.CASCADE)\n    nome = models.CharField(max_length=50)\n    def __str__(self):\n        return self.nome\nclass ItemCardapio(models.Model):",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Subcategoria",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Subcategoria(models.Model):\n    categoria = models.ForeignKey(Categoria, on_delete=models.CASCADE)\n    nome = models.CharField(max_length=50)\n    def __str__(self):\n        return self.nome\nclass ItemCardapio(models.Model):\n    img = models.ImageField(upload_to='cardapio/')\n    nome = models.CharField(max_length=100)\n    descricao = models.TextField()\n    valor = models.DecimalField(max_digits=10, decimal_places=2)",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "ItemCardapio",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class ItemCardapio(models.Model):\n    img = models.ImageField(upload_to='cardapio/')\n    nome = models.CharField(max_length=100)\n    descricao = models.TextField()\n    valor = models.DecimalField(max_digits=10, decimal_places=2)\n    categoria = models.ForeignKey(Categoria, on_delete=models.CASCADE)\n    subcategoria = models.ForeignKey(Subcategoria, on_delete=models.CASCADE)\n    ingredientes = models.ManyToManyField('Ingrediente', through='ItemIngredientes')\n    itens_relacionados = models.ManyToManyField('self', blank=True)\n    combos_relacionados = models.ManyToManyField('self', blank=True)",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Ingrediente",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Ingrediente(models.Model):\n    nome = models.CharField(max_length=100)\n    quantidade = models.DecimalField(max_digits=10, decimal_places=2)\n    data_reposicao = models.DateField()\n    data_validade = models.DateField()\n    valor_reposicao = models.DecimalField(max_digits=10, decimal_places=2)\n    def __str__(self):\n        return self.nome\nclass ItemIngredientes(models.Model):\n    item = models.ForeignKey(ItemCardapio, on_delete=models.CASCADE)",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "ItemIngredientes",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class ItemIngredientes(models.Model):\n    item = models.ForeignKey(ItemCardapio, on_delete=models.CASCADE)\n    ingrediente = models.ForeignKey(Ingrediente, on_delete=models.CASCADE)\n    quantidade = models.DecimalField(max_digits=10, decimal_places=2)\nclass Pedido(models.Model):\n    CHOICES_STATUS = [\n        ('esperando', 'Esperando'),\n        ('preparando', 'Preparando'),\n        ('finalizado', 'Finalizado'),\n    ]",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Pedido",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Pedido(models.Model):\n    CHOICES_STATUS = [\n        ('esperando', 'Esperando'),\n        ('preparando', 'Preparando'),\n        ('finalizado', 'Finalizado'),\n    ]\n    cliente = models.ForeignKey(UsuarioCustomizado, on_delete=models.CASCADE, related_name='pedidos_cliente')\n    cozinha = models.ForeignKey(UsuarioCustomizado, on_delete=models.CASCADE, related_name='pedidos_cozinha', null=True, blank=True)\n    gerente = models.ForeignKey(UsuarioCustomizado, on_delete=models.CASCADE, related_name='pedidos_gerente', null=True, blank=True)\n    status = models.CharField(max_length=20, choices=CHOICES_STATUS)",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "ItemPedido",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class ItemPedido(models.Model):\n    pedido = models.ForeignKey(Pedido, on_delete=models.CASCADE)\n    item = models.ForeignKey(ItemCardapio, on_delete=models.CASCADE)\n    quantidade = models.PositiveIntegerField()\nclass TransacaoFinanceira(models.Model):\n    CHOICES_TIPO_TRANSACAO = [\n        ('entrada', 'Entrada'),\n        ('saida', 'Saída'),\n    ]\n    data_despesa = models.DateField()",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "TransacaoFinanceira",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class TransacaoFinanceira(models.Model):\n    CHOICES_TIPO_TRANSACAO = [\n        ('entrada', 'Entrada'),\n        ('saida', 'Saída'),\n    ]\n    data_despesa = models.DateField()\n    valor = models.DecimalField(max_digits=10, decimal_places=2)\n    descricao = models.TextField()\n    tipo = models.CharField(max_length=10, choices=CHOICES_TIPO_TRANSACAO)\n    item_cardapio = models.ForeignKey(ItemCardapio, on_delete=models.CASCADE)",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Carrinho",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Carrinho(models.Model):\n    cliente = models.ForeignKey(UsuarioCustomizado, on_delete=models.CASCADE)\n    valor_total = models.DecimalField(max_digits=10, decimal_places=2, default=0)\nclass ItemCarrinho(models.Model):\n    carrinho = models.ForeignKey(Carrinho, on_delete=models.CASCADE)\n    item = models.ForeignKey(ItemCardapio, on_delete=models.CASCADE)\n    quantidade = models.PositiveIntegerField()\nclass Estoque(models.Model):\n    item = models.ForeignKey(Ingrediente, on_delete=models.CASCADE)\n    quantidade = models.DecimalField(max_digits=10, decimal_places=2)",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "ItemCarrinho",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class ItemCarrinho(models.Model):\n    carrinho = models.ForeignKey(Carrinho, on_delete=models.CASCADE)\n    item = models.ForeignKey(ItemCardapio, on_delete=models.CASCADE)\n    quantidade = models.PositiveIntegerField()\nclass Estoque(models.Model):\n    item = models.ForeignKey(Ingrediente, on_delete=models.CASCADE)\n    quantidade = models.DecimalField(max_digits=10, decimal_places=2)\n    valor_unitario = models.DecimalField(max_digits=10, decimal_places=2)\n    data_reposicao = models.DateField()\n    data_validade = models.DateField()",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Estoque",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Estoque(models.Model):\n    item = models.ForeignKey(Ingrediente, on_delete=models.CASCADE)\n    quantidade = models.DecimalField(max_digits=10, decimal_places=2)\n    valor_unitario = models.DecimalField(max_digits=10, decimal_places=2)\n    data_reposicao = models.DateField()\n    data_validade = models.DateField()\n    def __str__(self):\n        return f\"{self.item} - Quantidade: {self.quantidade}\"\n    def restock(self, quantidade):\n        self.quantidade += quantidade",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "Permissao",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class Permissao(models.Model):\n    nome = models.CharField(max_length=100)\n    def __str__(self):\n        return self.nome\nclass PerfilUsuario(models.Model):\n    user = models.OneToOneField(UsuarioCustomizado, on_delete=models.CASCADE)\n    permissoes = models.ManyToManyField(Permissao)\n    def __str__(self):\n        return self.user.username",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "PerfilUsuario",
        "kind": 6,
        "importPath": "api.mainApi.models",
        "description": "api.mainApi.models",
        "peekOfCode": "class PerfilUsuario(models.Model):\n    user = models.OneToOneField(UsuarioCustomizado, on_delete=models.CASCADE)\n    permissoes = models.ManyToManyField(Permissao)\n    def __str__(self):\n        return self.user.username",
        "detail": "api.mainApi.models",
        "documentation": {}
    },
    {
        "label": "VeiculoSerializer",
        "kind": 6,
        "importPath": "api.mainApi.serializers",
        "description": "api.mainApi.serializers",
        "peekOfCode": "class VeiculoSerializer(serializers.ModelSerializer):\n    class Meta:\n        fields = \"__all__\"",
        "detail": "api.mainApi.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.mainApi.urls",
        "description": "api.mainApi.urls",
        "peekOfCode": "urlpatterns = [\n    path('cardapio/', views.cardapio, name='cardapio'),\n    path('carrinho/', views.carrinho, name='carrinho'),\n    path('pedidos/', views.pedidos, name='pedidos'),\n    path('estoque/', views.estoque, name='estoque'),\n    path('', views.login, name='login'),\n    path('finalizar_pagamento/', views.finalizar_pagamento, name='finalizar_pagamento'),\n    path('cadastro/', views.cadastrar_usuario_cli, name='cadastrar_usuario_cli'),\n    path('login_google/', views.login_google, name='login_google'),\n    path('auth/', include('social_django.urls', namespace='social')),",
        "detail": "api.mainApi.urls",
        "documentation": {}
    },
    {
        "label": "cardapio",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def cardapio(request):\n    cardapio = Cardapio()\n    if request.method == 'POST':\n        action = request.POST.get('action')\n        if action == 'adicionar':\n            nome = request.POST.get('nome')\n            quantidade = int(request.POST.get('quantidade_item') or 0)\n            valor_unitario = float(request.POST.get('valor_item') or 0)\n            categoria = request.POST.get('categoria')\n            subcategoria = request.POST.get('subcategoria')",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "estoque",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def estoque(request):\n    estoque = Estoque()\n    if request.method == 'POST':\n        action = request.POST.get('action')\n        if action == 'restoque':\n            nome = request.POST.get('nome_item')\n            quantidade = int(request.POST.get('quantidade_item'))\n            valor_unitario = float(request.POST.get('valor_item'))\n            tipo = request.POST.get('tipo_item')\n            ingredientes = request.POST.get('ingredientes_item')",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "carrinho",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def carrinho(request):\n    if 'carrinho' not in request.session or not request.session['carrinho']['itens']:\n        messages.error(request, \"Seu carrinho está vazio.\")\n        return redirect('cardapio')\n    carrinho_session = request.session['carrinho']\n    itens_carrinho = carrinho_session['itens']\n    valor_total_carrinho = carrinho_session['valor_total']\n    if request.method == 'POST':\n        action = request.POST.get('action')\n        item_id = request.POST.get('item_id')",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "finalizar_pagamento",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def finalizar_pagamento(request):\n    if 'carrinho' not in request.session or not request.session['carrinho']['itens']:\n        messages.error(request, \"Não é possível finalizar o pagamento. Seu carrinho está vazio.\")\n        return redirect('carrinho')\n    carrinho_session = request.session['carrinho']\n    itens_carrinho = carrinho_session['itens']\n    valor_total_carrinho = carrinho_session['valor_total']\n    id_pedido = str(uuid.uuid4())\n    pedido = Pedido(id_pedido=id_pedido, status='em espera', itens_pedido=itens_carrinho, valor_total=valor_total_carrinho)\n    try:",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "todos_pedidos",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def todos_pedidos(request):\n    # Verifica se o usuário atual é um admin/gerente\n    if request.user.tipo_usuario == 'gerente' or request.user.tipo_usuario=='adm':\n        # Crie uma instância da classe Pedidos\n        pedidos = Pedidos()\n        # Adicione os pedidos existentes ao objeto Pedidos\n        existing_pedidos = pedidos.db.collection('pedidos').get()\n        for pedido in existing_pedidos:\n            pedido_data = pedido.to_dict()\n            pedidos.adicionar_pedido(pedido_data)",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "pedidos",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def pedidos(request):\n    # Substitua 'id_usuario' pelo método que você usa para obter o id do usuário logado\n    id_usuario = request.session.get('id_usuario')\n    # Crie uma instância da classe Pedidos\n    pedidos = Pedidos()\n    # Adicione os pedidos existentes ao objeto Pedidos\n    existing_pedidos = pedidos.db.collection('pedidos').where('id_usuario', '==', id_usuario).get()\n    for pedido in existing_pedidos:\n        pedido_data = pedido.to_dict()\n        pedidos.adicionar_pedido(pedido_data)",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "logout",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def logout(request):\n    return render(request, \"accounts/logout.html\") \n@csrf_protect\ndef cadastrar_usuario_cli(request):\n    form = CadastroClienteForm()\n    if request.method == 'POST':\n        nome = request.POST['nome']\n        email = request.POST['email']\n        telefone = request.POST['telefone']\n        tipo = TipoUsuario.CLI",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "cadastrar_usuario_cli",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def cadastrar_usuario_cli(request):\n    form = CadastroClienteForm()\n    if request.method == 'POST':\n        nome = request.POST['nome']\n        email = request.POST['email']\n        telefone = request.POST['telefone']\n        tipo = TipoUsuario.CLI\n        password = request.POST['password']\n        password1 = request.POST['password1']\n        if password != password1:",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "cadastrar_usuario_func",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def cadastrar_usuario_func(request):\n    form = CadastroClienteForm()\n    if request.method == 'POST':\n        nome = request.POST['nome']\n        email = request.POST['email']\n        telefone = request.POST['telefone']\n        tipo = TipoUsuario.FUN\n        password = request.POST['password']\n        password1 = request.POST['password1']\n        if password != password1:",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def login(request):\n    form = LoginForm()\n    if request.method == 'POST':\n        email = request.POST.get('email')\n        password = request.POST.get('password')\n        api_key = os.environ.get('GOOGLE_API_KEY')\n        payload = {\n            'email': email,\n            'password': password,\n            'returnSecureToken': True",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "reset",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def reset(request):\n    form = LoginForm()\n    if request.method == 'POST':\n        email = request.POST.get('email')\n        try:\n            auth.generate_password_reset_link(email) # type: ignore\n            messages.success(request, 'Um link de redefinição de senha foi enviado para o seu e-mail.')\n            return redirect('login')\n        except auth.InvalidArgumentError: # type: ignore\n            messages.error(request, 'E-mail inválido.')",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "login_google",
        "kind": 2,
        "importPath": "api.mainApi.views",
        "description": "api.mainApi.views",
        "peekOfCode": "def login_google(request):\n    if request.method == 'POST':\n        id_token = request.POST.get('idtoken')\n        try:\n            google_request = Request()\n            credentials, _ = google.auth.default(scopes=['openid', 'email', 'profile'])\n            id_info = id_token.verify_oauth2_token(id_token, google_request, credentials.client_id)\n            uid = id_info['sub']\n            usuario = Usuario.buscar(uid)\n            if usuario is None:",
        "detail": "api.mainApi.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "api.manage",
        "description": "api.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'api.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "api.manage",
        "documentation": {}
    }
]